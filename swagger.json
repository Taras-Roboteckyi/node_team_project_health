{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Health_SlimMoms",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "http://localhost:4600/api" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Products",
      "description": "Products endpoints"
    },
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Diary",
      "description": "Diary endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],

        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],

        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Login or password is wrong",
            "content": {}
          }
        }
      }
    },

    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "description": "JWT token is required",

        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/auth/user": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get user info",
        "parameters": [],
        "description": "JWT token is required",
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },

    "/products/public/{bloodType}": {
      "post": {
        "tags": ["Products"],
        "summary": "Public user data",
        "parameters": [
          {
            "name": "bloodType",
            "in": "path",
            "type": "string",
            "description": "User blood type",
            "required": true
          }
        ],

        "requestBody": {
          "description": "Input user data object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotAllowedProductsPublicRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAllowedProductsPublicResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },

    "/products/search/{query}": {
      "get": {
        "tags": ["Products"],
        "summary": "Search products",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "type": "string",
            "description": "Products name",
            "required": true
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchProductsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "404": {
            "description": "Product not found",
            "content": {}
          }
        }
      }
    },

    "/users/user/{id}": {
      "post": {
        "tags": ["Users"],
        "summary": "Get registered user data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id",
            "required": true
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Input user data object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetRegisteredUserDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegisteredUserDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "404": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },

    "/diary/{date}": {
      "get": {
        "tags": ["Diary"],
        "summary": "Get user date",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "type": "string",
            "description": "Date",
            "required": true
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Login or password is wrong",
            "content": {}
          }
        }
      }
    },

    "/diary/add": {
      "post": {
        "tags": ["Diary"],
        "summary": "Add user data to diary",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User data object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserDataDiaryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddUserDataDiaryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/diary/remove": {
      "delete": {
        "tags": ["Diary"],
        "summary": "Delete user data from diary",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User data object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteUserDataFromDiaryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserDataFromDiaryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Date must be current",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "UserName"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "string",
              "description": "User's id",
              "example": "62d524d8b27f9cb72eca52f9"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "UserName"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            }
          }
        },
        "example": {
          "code": 201,
          "user": {
            "id": "62d524d8b27f9cb72eca52f9",
            "name": "UserName",
            "email": "test@gmail.com"
          }
        }
      },

      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "string",
              "description": "User's id",
              "example": "62d524d8b27f9cb72eca52f9"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "UserName"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            }
          }
        },
        "example": {
          "code": 200,
          "data": {
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyY2FkMjJiZjAwZmZiNTk1NDZhMzY2NyIsImlhdCI6MTY1ODEzNzkwOSwiZXhwIjoxNjU4MjI0MzA5fQ.b2JGT59T9jsx0_MygjXnPkrBlk6FMWkfEDVzhrPfk9M",
            "id": "62cad22bf00ffb59546a3667",
            "name": "Test1",
            "userData": {
              "height": "0",
              "age": "0",
              "currentWeight": "0",
              "desiredWeight": "0",
              "bloodType": "0",
              "calories": "0"
            },
            "notAllowedProducts": []
          }
        }
      },

      "GetUserInfoRequest": {
        "properties": {}
      },
      "GetUserInfoResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "string",
              "description": "User's id",
              "example": "62d524d8b27f9cb72eca52f9"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "UserName"
            },
            "email": {
              "type": "email",
              "description": "User's email"
            },
            "userData": {
              "type": "object",
              "description": "User's data"
            },
            "notAllowedProducts": {
              "type": "array",
              "description": "User's not allowed products",
              "example": "62d524d8b27f9cb72eca52f9"
            }
          }
        },
        "example": {
          "id": "62d545c2b8fd4f752293f8a8",
          "name": "UserName",
          "email": "test@gmail.com",
          "userData": {
            "height": "0",
            "age": "0",
            "currentWeight": "0",
            "desiredWeight": "0",
            "bloodType": "0",
            "calories": "0"
          },
          "notAllowedProducts": []
        }
      },

      "NotAllowedProductsPublicRequest": {
        "type": "object",
        "required": {
          "height": "175",
          "age": "30",
          "currentWeight": "80",
          "desiredWeight": "75",
          "bloodType": "1"
        },
        "properties": {
          "height": {
            "type": "number",
            "description": "User's height",
            "example": "175"
          },
          "age": {
            "type": "number",
            "description": "User's age",
            "format": "30"
          },
          "currentWeight": {
            "type": "number",
            "description": "User's currentWeight",
            "example": "80"
          },
          "desiredWeight": {
            "type": "number",
            "description": "User's desiredWeight",
            "example": "75"
          },
          "bloodType": {
            "type": "number",
            "description": "User's bloodType",
            "example": "1"
          }
        }
      },
      "NotAllowedProductsPublicResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "string",
              "description": "User's id",
              "example": "62d524d8b27f9cb72eca52f9"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "UserName"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            }
          }
        },
        "example": {
          "code": 200,
          "calories": 1462,
          "notAllowedProducts": [
            {
              "groupBloodNotAllowed": [null, false, false, true, false],
              "_id": "5d51694902b2373622ff5c4c",
              "categories": ["масла и жиры"],
              "weight": 100,
              "title": {
                "ru": "Масло арахисовое",
                "ua": "Олія арахісове"
              },
              "calories": 899
            }
          ]
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
